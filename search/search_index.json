{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Twitter tools","text":"<p>Documentation: https://namuan.github.io/twitter-utils</p> <p>Source Code: https://github.com/namuan/twitter-utils</p> <p>PyPI: https://pypi.org/project/twitter-utils/</p> <p>Collection of twitter utilities.</p>"},{"location":"#installation","title":"Installation","text":"<pre><code>pip install twitter-utils\n</code></pre>"},{"location":"#example-usage","title":"Example Usage","text":"<p>All commands in <code>twitter-utils</code> work better with an authenticated user otherwise Twitter bombards you with crap. The following command is tested on MacOS and will create a symlink to your Firefox profile. Please replace the source path with your own.</p> <pre><code>ln -s \"~/Library/Application\\ Support/Firefox/Profiles/..\" $(pwd)/fireprofile\n</code></pre> <p>All commands take an argument to specify the output directory. Each tweet captured will be saved in the output directory to a file with the file name as the tweet id.</p>"},{"location":"#grab-tweets-of-an-account-between-two-dates","title":"Grab tweets of an account between two dates","text":"<pre><code>tweets-between --account &lt;&lt;account&gt;&gt; --since 2020-04-10 --until 2020-04-25 -o temp-dir\n</code></pre>"},{"location":"#grab-tweets-on-a-page","title":"Grab tweets on a page","text":"<pre><code>tweets-thread -a &lt;&lt;account&gt;&gt; -t &lt;&lt;tweet-id&gt;&gt; -o temp-dir\n</code></pre>"},{"location":"#using-twarc-to-capture-tweet-data-using-twitter-api","title":"Using twarc to capture tweet data using Twitter API","text":"<p>You can use twarc to get tweets given a list of ids. Twarc uses Twitter API so you'll need those credentials. Twarc hydrate command that will grab tweet data given a list of ids.</p> <pre><code># Depending on your output directory, here is a command to get the list of file name (tweet ids)\nfind &lt;output-folder&gt;/*.html | while read file; do basename $file \".html\"; done &gt; &lt;target-file-with-list-of-tweet-ids&gt;\n\n# These feed this list of ids to twarc\ntwarc hydrate &lt;target-file-with-list-of-tweet-ids&gt; &gt; &lt;file-with-all-tweets-data&gt;.jsonl\n</code></pre>"},{"location":"#selecting-webdriver","title":"Selecting WebDriver","text":"<p>All commands in <code>twitter-utils</code> uses Firefox by default, but it can be overridden by providing an alternate browser. Supporting Firefox, Safari and Chrome.</p> <p>To use Safari instead of Firefox, pass the <code>--browser</code> option before specifying the sub-command.</p> <pre><code>&lt;cmd&gt; --browser safari ...\n</code></pre> <p>And to use Chrome</p> <pre><code>&lt;cmd&gt; --browser chrome ...\n</code></pre>"},{"location":"#development","title":"Development","text":"<ul> <li>Clone this repository</li> <li>Requirements:</li> <li>Python 3.7+</li> <li>Poetry</li> <li> <p>Comby</p> </li> <li> <p>Create a virtual environment and install the dependencies</p> </li> </ul> <pre><code>poetry install\n</code></pre> <ul> <li>Activate the virtual environment</li> </ul> <pre><code>poetry shell\n</code></pre>"},{"location":"#validating-build","title":"Validating build","text":"<pre><code>make build\n</code></pre>"},{"location":"#release-process","title":"Release process","text":"<p>A release is automatically published when a new version is bumped using <code>make bump</code>. See <code>.github/workflows/build.yml</code> for more details. Once the release is published, <code>.github/workflows/publish.yml</code> will automatically publish it to PyPI.</p>"},{"location":"api_docs/","title":"API documentation","text":""},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#050-2022-01-01","title":"0.5.0 (2022-01-01)","text":""},{"location":"changelog/#refactor","title":"Refactor","text":"<ul> <li>Use temporary directory for generating files when running tests to avoid conflicts</li> <li>Replace print statements</li> </ul>"},{"location":"changelog/#feat","title":"Feat","text":"<ul> <li>Allow capturing tweets for a #hashtag between date ranges</li> </ul>"},{"location":"changelog/#040-2022-01-01","title":"0.4.0 (2022-01-01)","text":""},{"location":"changelog/#refactor_1","title":"Refactor","text":"<ul> <li>Improve testing code coverage</li> <li>Move workflow steps listing along with the main script</li> <li>Compare two different ways to fetch tweets on a page</li> <li>Add precommit check for shell scripts</li> <li>Upgrade type hints to the new native types</li> <li>Move class under main package</li> </ul>"},{"location":"changelog/#feat_1","title":"Feat","text":"<ul> <li>Get tweets on a page</li> </ul>"},{"location":"changelog/#030-2021-12-31","title":"0.3.0 (2021-12-31)","text":""},{"location":"changelog/#feat_2","title":"Feat","text":"<ul> <li>Change of project name</li> </ul>"},{"location":"changelog/#021-2021-12-31","title":"0.2.1 (2021-12-31)","text":""},{"location":"changelog/#fix","title":"Fix","text":"<ul> <li>Add types for missing classes</li> </ul>"},{"location":"changelog/#refactor_2","title":"Refactor","text":"<ul> <li>clean up unnecessary file</li> </ul>"},{"location":"changelog/#020-2021-12-31","title":"0.2.0 (2021-12-31)","text":""},{"location":"changelog/#feat_3","title":"Feat","text":"<ul> <li>Download tweets between two dates</li> </ul>"}]}