{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Twitter tools Documentation : https://namuan.github.io/twitter-utils Source Code : https://github.com/namuan/twitter-utils PyPI : https://pypi.org/project/twitter-utils/ Collection of twitter utilities. Installation pip install twitter-utils Example Usage All commands in twitter-utils work better with an authenticated user otherwise Twitter bombards you with crap. The following command is tested on MacOS and will create a symlink to your Firefox profile. Please replace the source path with your own. ln -s \"~/Library/Application\\ Support/Firefox/Profiles/..\" $(pwd)/fireprofile All commands take an argument to specify the output directory. Each tweet captured will be saved in the output directory to a file with the file name as the tweet id. Grab tweets of an account between two dates tweets-between --account <<account>> --since 2020-04-10 --until 2020-04-25 -o temp-dir Grab tweets on a page tweets-thread -a <<account>> -t <<tweet-id>> -o temp-dir Using twarc to capture tweet data using Twitter API You can use twarc to get tweets given a list of ids. Twarc uses Twitter API so you'll need those credentials. Twarc hydrate command that will grab tweet data given a list of ids. # Depending on your output directory, here is a command to get the list of file name (tweet ids) find <output-folder>/*.html | while read file; do basename $file \".html\"; done > <target-file-with-list-of-tweet-ids> # These feed this list of ids to twarc twarc hydrate <target-file-with-list-of-tweet-ids> > <file-with-all-tweets-data>.jsonl Selecting WebDriver All commands in twitter-utils uses Firefox by default, but it can be overridden by providing an alternate browser. Supporting Firefox, Safari and Chrome. To use Safari instead of Firefox, pass the --browser option before specifying the sub-command. <cmd> --browser safari ... And to use Chrome <cmd> --browser chrome ... Development Clone this repository Requirements: Poetry Python 3.7+ Create a virtual environment and install the dependencies poetry install Activate the virtual environment poetry shell Validating build make build Release process A release is automatically published when a new version is bumped using make bump . See .github/workflows/build.yml for more details. Once the release is published, .github/workflows/publish.yml will automatically publish it to PyPI.","title":"Introduction"},{"location":"#twitter-tools","text":"Documentation : https://namuan.github.io/twitter-utils Source Code : https://github.com/namuan/twitter-utils PyPI : https://pypi.org/project/twitter-utils/ Collection of twitter utilities.","title":"Twitter tools"},{"location":"#installation","text":"pip install twitter-utils","title":"Installation"},{"location":"#example-usage","text":"All commands in twitter-utils work better with an authenticated user otherwise Twitter bombards you with crap. The following command is tested on MacOS and will create a symlink to your Firefox profile. Please replace the source path with your own. ln -s \"~/Library/Application\\ Support/Firefox/Profiles/..\" $(pwd)/fireprofile All commands take an argument to specify the output directory. Each tweet captured will be saved in the output directory to a file with the file name as the tweet id.","title":"Example Usage"},{"location":"#grab-tweets-of-an-account-between-two-dates","text":"tweets-between --account <<account>> --since 2020-04-10 --until 2020-04-25 -o temp-dir","title":"Grab tweets of an account between two dates"},{"location":"#grab-tweets-on-a-page","text":"tweets-thread -a <<account>> -t <<tweet-id>> -o temp-dir","title":"Grab tweets on a page"},{"location":"#using-twarc-to-capture-tweet-data-using-twitter-api","text":"You can use twarc to get tweets given a list of ids. Twarc uses Twitter API so you'll need those credentials. Twarc hydrate command that will grab tweet data given a list of ids. # Depending on your output directory, here is a command to get the list of file name (tweet ids) find <output-folder>/*.html | while read file; do basename $file \".html\"; done > <target-file-with-list-of-tweet-ids> # These feed this list of ids to twarc twarc hydrate <target-file-with-list-of-tweet-ids> > <file-with-all-tweets-data>.jsonl","title":"Using twarc to capture tweet data using Twitter API"},{"location":"#selecting-webdriver","text":"All commands in twitter-utils uses Firefox by default, but it can be overridden by providing an alternate browser. Supporting Firefox, Safari and Chrome. To use Safari instead of Firefox, pass the --browser option before specifying the sub-command. <cmd> --browser safari ... And to use Chrome <cmd> --browser chrome ...","title":"Selecting WebDriver"},{"location":"#development","text":"Clone this repository Requirements: Poetry Python 3.7+ Create a virtual environment and install the dependencies poetry install Activate the virtual environment poetry shell","title":"Development"},{"location":"#validating-build","text":"make build","title":"Validating build"},{"location":"#release-process","text":"A release is automatically published when a new version is bumped using make bump . See .github/workflows/build.yml for more details. Once the release is published, .github/workflows/publish.yml will automatically publish it to PyPI.","title":"Release process"},{"location":"api_docs/","text":"API documentation tweets_between Downloads tweets between two dates. tweets_thread Downloads tweets between two dates.","title":"API documentation"},{"location":"api_docs/#api-documentation","text":"","title":"API documentation"},{"location":"api_docs/#twitter_utils.tweets_between","text":"Downloads tweets between two dates.","title":"tweets_between"},{"location":"api_docs/#twitter_utils.tweets_thread","text":"Downloads tweets between two dates.","title":"tweets_thread"},{"location":"changelog/","text":"0.5.0 (2022-01-01) Refactor Use temporary directory for generating files when running tests to avoid conflicts Replace print statements Feat Allow capturing tweets for a #hashtag between date ranges 0.4.0 (2022-01-01) Refactor Improve testing code coverage Move workflow steps listing along with the main script Compare two different ways to fetch tweets on a page Add precommit check for shell scripts Upgrade type hints to the new native types Move class under main package Feat Get tweets on a page 0.3.0 (2021-12-31) Feat Change of project name 0.2.1 (2021-12-31) Fix Add types for missing classes Refactor clean up unnecessary file 0.2.0 (2021-12-31) Feat Download tweets between two dates","title":"Changelog"},{"location":"changelog/#050-2022-01-01","text":"","title":"0.5.0 (2022-01-01)"},{"location":"changelog/#refactor","text":"Use temporary directory for generating files when running tests to avoid conflicts Replace print statements","title":"Refactor"},{"location":"changelog/#feat","text":"Allow capturing tweets for a #hashtag between date ranges","title":"Feat"},{"location":"changelog/#040-2022-01-01","text":"","title":"0.4.0 (2022-01-01)"},{"location":"changelog/#refactor_1","text":"Improve testing code coverage Move workflow steps listing along with the main script Compare two different ways to fetch tweets on a page Add precommit check for shell scripts Upgrade type hints to the new native types Move class under main package","title":"Refactor"},{"location":"changelog/#feat_1","text":"Get tweets on a page","title":"Feat"},{"location":"changelog/#030-2021-12-31","text":"","title":"0.3.0 (2021-12-31)"},{"location":"changelog/#feat_2","text":"Change of project name","title":"Feat"},{"location":"changelog/#021-2021-12-31","text":"","title":"0.2.1 (2021-12-31)"},{"location":"changelog/#fix","text":"Add types for missing classes","title":"Fix"},{"location":"changelog/#refactor_2","text":"clean up unnecessary file","title":"Refactor"},{"location":"changelog/#020-2021-12-31","text":"","title":"0.2.0 (2021-12-31)"},{"location":"changelog/#feat_3","text":"Download tweets between two dates","title":"Feat"}]}